############
# Build step
############
FROM balenalib/%%BALENA_MACHINE_NAME%%-golang:1.20-bullseye-build as build

WORKDIR /src

# Building as described at https://docs.gitlab.com/runner/development/
# Change this env var to a desired version tag, or set to "master" (YMMV)
ENV GITLAB_VERSION=v16.6
RUN    go install gitlab.com/gitlab-org/gitlab-runner@${GITLAB_VERSION}

# Grab docker-gc
ENV DOCKER_GC_VERSION=131a786886f571b656e0e4bdda967b7abc1fa7d1
RUN    git clone https://github.com/spotify/docker-gc.git \
    && cd docker-gc \
    && git checkout -b build "${DOCKER_GC_VERSION}"

# Grab balena-engine
ENV BALENA_VERSION=v20.10.43
COPY balena-engine-retrieve.sh ./
RUN ./balena-engine-retrieve.sh "${BALENA_VERSION}" "%%BALENA_ARCH%%"

#####################
# Runtime environment
#####################
FROM balenalib/%%BALENA_MACHINE_NAME%%-debian:bullseye-run

WORKDIR /usr/src/app

RUN install_packages cron psmisc

COPY --from=build /usr/bin/gitlab-runner /usr/bin/gitlab-runner
COPY --from=build /src/docker-gc/docker-gc /usr/bin/docker-gc
COPY --from=build /usr/bin/balena-engine /usr/bin/balena-engine

RUN case "%%BALENA_MACHINE_NAME%%" in \
      raspberry-pi) \
        echo "Install official docker as opposed to balena-engine for this device (workaround)" && \
        curl -sSL https://get.docker.com | sh \
        ;; \
    esac

COPY docker-gc.cron ./
COPY docker-gc-exclude* /etc/
COPY start.sh ./
COPY gc-job.sh /usr/bin/

CMD ["bash", "start.sh"]
